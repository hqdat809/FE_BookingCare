{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/appReducer.js","store/reducers/userReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","utils/constant.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","components/CustomScrollbars.js","components/CustomToast.js","routes/Home.js","store/actions/appActions.js","axios.js","services/userService.js","containers/Auth/Login.js","store/actions/userActions.js","utils/emitter.js","containers/System/ModalUser.js","containers/System/ModalEditUser.js","containers/System/UserManage.js","containers/System/UserRedux.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/Header.js","routes/System.js","components/ConfirmModal.js","containers/HomePage/HomeHeader.js","containers/HomePage/Section/Specialty.js","containers/HomePage/Section/MedicalFacility.js","containers/HomePage/Section/OutstandingDoctor.js","containers/HomePage/Section/HandBook.js","containers/HomePage/Section/About.js","containers/HomePage/HomeFooter.js","containers/HomePage/HomePage.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js","../node_modules/typescript/lib sync"],"names":["actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT","initialState","started","language","systemMenuPath","contentOfConfirmModal","isOpen","messageId","handleFunc","dataFunc","appReducer","state","action","type","isLoggedIn","userInfo","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","key","whitelist","appPersistConfig","history","createBrowserHistory","basename","process","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","user","persistReducer","userReducer","app","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","dispatch","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","path","LANGUAGES","KeyCodeUtils","e","UP","DOWN","TAB","ENTER","E","ESCAPE","flattenMessages","nestedMessages","prefix","keys","reduce","messages","value","prefixedKey","assign","messages_vi","messages_en","LanguageUtils","lang","CustomScrollbars","ref","React","createRef","getScrollLeft","current","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","props","scrollbars","originalTop","iteration","scroll","scrollTop","setTimeout","renderTrackHorizontal","className","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","this","disableVerticalScroll","disableHorizontalScroll","children","otherProps","autoHide","autoHideTimeout","hideTracksWhenNotNeeded","Component","CustomToastCloseButton","onClick","closeToast","Home","linkToRedirect","to","connect","changeLanguageApp","languageInput","instance","axios","create","baseURL","interceptors","response","use","data","createNewUserService","post","editUserService","put","Login","handleChangeUserName","event","setState","username","target","handleChangePassword","password","handleLogin","a","errMessage","email","errCode","message","userLoginSuccess","console","log","handleShowHidePassword","isShowPassword","placeholder","onChange","style","color","navigate","push","userInfor","_emitter","EventEmitter","setMaxListeners","emitter","ModalUser","toggle","toggleFromParent","handleOnchangeInput","id","copyState","checkValidateInput","isValid","arrInput","i","length","alert","handleAddNewUser","createNewUser","firstName","lastName","address","phoneNumber","listenToEmitter","on","Modal","ModalHeader","ModalBody","ModalFooter","Button","ModalEditUser","handleEditUser","editUser","UserManage","getAllUserFromReact","inputId","get","arrUsers","users","deleteUser","userId","delete","isOpenModal","emit","isOpenModalEditUser","toogleUserModal","toogleUserModalEdit","reject","map","item","index","UserRedux","MenuGroup","name","Menu","active","link","hasSubMenu","onLinkClick","data-toggle","aria-expanded","SubMenu","getItemClass","location","pathname","MenuGroupWithRouter","withRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","prevProps","prevState","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ComponentWithRef","withRef","adminMenu","Header","handleChangeLanguage","changeLanguageAppRedux","processLogout","title","actions","System","Fragment","component","ConfirmModal","handlerKeyDown","which","keyCode","acceptBtnRef","disabled","click","onAcceptBtnClick","onClose","setContentOfConfirmModal","document","addEventListener","removeEventListener","centered","HomeHeader","changeLanguage","class","Specialty","settings","src","MedicalFacility","OutstandingDoctor","HandBook","infinite","slidesToShow","slidesToScroll","About","width","height","frameborder","allow","allowfullscreen","HomeFooter","href","HomePage","App","handlePersistorState","getState","bootstrapped","onBeforeLift","Promise","resolve","then","catch","exact","toastClassName","bodyClassName","autoClose","hideProgressBar","pauseOnHover","pauseOnFocusLoss","closeOnClick","draggable","closeButton","Boolean","window","hostname","match","getFlattenedMessages","IntlProviderWrapper","locale","defaultLocale","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","Error","code","module","exports"],"mappings":"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","file":"static/js/main.7b02a66a.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\r\n    //app\r\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\r\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\r\n    CHANGE_LANGUAGE: 'CHANGE_LANGUAGE',\r\n\r\n\r\n    //user\r\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\r\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAIL: 'USER_LOGIN_FAIL',\r\n    PROCESS_LOGOUT: 'PROCESS_LOGOUT',\r\n})\r\n\r\nexport default actionTypes;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initContentOfConfirmModal = {\r\n    isOpen: false,\r\n    messageId: \"\",\r\n    handleFunc: null,\r\n    dataFunc: null\r\n}\r\n\r\nconst initialState = {\r\n    started: true,\r\n    language: 'vi',\r\n    systemMenuPath: '/system/user-manage',\r\n    contentOfConfirmModal: {\r\n        ...initContentOfConfirmModal\r\n    }\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.APP_START_UP_COMPLETE:\r\n            return {\r\n                ...state,\r\n                started: true\r\n            }\r\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL:\r\n            return {\r\n                ...state,\r\n                contentOfConfirmModal: {\r\n                    ...state.contentOfConfirmModal,\r\n                    ...action.contentOfConfirmModal\r\n                }\r\n            }\r\n        case actionTypes.CHANGE_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                language: action.language\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userInfo: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userInfo: action.userInfo\r\n            }\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        case actionTypes.PROCESS_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo', 'language']\r\n};\r\n\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'app',\r\n    whitelist: ['language']\r\n}\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig, appReducer)\r\n})","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n        actionTypes.CHANGE_LANGUAGE\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n    authenticatedSelector: state => state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    redirectPath: '/login'\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n    // Want to redirect the user when they are authenticated\r\n    authenticatedSelector: state => !state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    allowRedirectBack: false\r\n});","export const path = {\r\n    HOME: '/',\r\n    HOMEPAGE: '/home',\r\n    LOGIN: '/login',\r\n    LOG_OUT: '/logout',\r\n    SYSTEM: '/system'\r\n};\r\n\r\nexport const LANGUAGES = {\r\n    VI: 'vi',\r\n    EN: 'en'\r\n};\r\n\r\nexport const manageActions = {\r\n    ADD: \"ADD\",\r\n    EDIT: \"EDIT\",\r\n    DELETE: \"DELETE\"\r\n};\r\n\r\nexport const dateFormat = {\r\n    SEND_TO_SERVER: 'DD/MM/YYYY'\r\n};\r\n\r\nexport const YesNoObj = {\r\n    YES: 'Y',\r\n    NO: 'N'\r\n}","class KeyCodeUtils {\r\n\r\n    static UP = 38;\r\n\r\n    static DOWN = 40;\r\n\r\n    static TAB = 9;\r\n\r\n    static ENTER = 13;\r\n\r\n    static E = 69;\r\n\r\n    static ESCAPE = 27; \r\n\r\n    static isNavigation(e) {\r\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\r\n    }\r\n\r\n    static isNumeric(e) {\r\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\r\n    }\r\n    static isAlphabetic(e) {\r\n        return (e >= 65 && e <= 90);\r\n    }\r\n    static isDecimal(e) {\r\n        return e === 190 || e === 188 || e === 108 || e === 110;\r\n    }\r\n\r\n    static isDash(e) {\r\n        return e === 109 || e === 189;\r\n    }\r\n}\r\n\r\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './CustomScrollbars.scss';\r\n\r\nclass CustomScrollbars extends Component {\r\n\r\n    ref = React.createRef();\r\n\r\n    getScrollLeft =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollLeft();\r\n    }\r\n    getScrollTop =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollTop();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const targetScrollTop = scrollbars.getScrollHeight();\r\n        this.scrollTo(targetScrollTop);\r\n    };\r\n\r\n    scrollTo = (targetTop) => {\r\n        const { quickScroll } = this.props;\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const originalTop = scrollbars.getScrollTop();\r\n        let iteration = 0;\r\n\r\n        const scroll = () => {\r\n            iteration++;\r\n            if (iteration > 30) {\r\n                return;\r\n            }\r\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\r\n\r\n            if (quickScroll && quickScroll === true) {\r\n                scroll();\r\n            } else {\r\n                setTimeout(() => {\r\n                    scroll();\r\n                }, 20);\r\n            }\r\n        };\r\n\r\n        scroll();\r\n    };\r\n\r\n    renderTrackHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderTrackVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderThumbHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderThumbVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderNone = (props) => {\r\n        return (\r\n            <div />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\r\n        return (\r\n            <Scrollbars\r\n                ref={this.ref}\r\n                autoHide={true}\r\n                autoHideTimeout={200}\r\n                hideTracksWhenNotNeeded={true}\r\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\r\n                {...otherProps}\r\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\r\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\r\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\r\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\r\n            >\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomScrollbars;","import React, { Component, Fragment } from 'react';\r\nimport { FormattedMessage, FormattedTime } from 'react-intl';\r\n\r\nimport CustomScrollBar from '../components/CustomScrollbars';\r\n\r\nimport './CustomToast.scss';\r\n\r\nclass CustomToast extends Component {\r\n\r\n    render() {\r\n        const { titleId, message, messageId, time } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"custom-toast\">\r\n                    <div className=\"toast-title\">\r\n                        {time && (\r\n                            <span className=\"date\">\r\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\r\n                            </span>\r\n                        )}\r\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\r\n                        <FormattedMessage id={titleId} />\r\n                    </div>\r\n                    {\r\n                        (message && typeof message === 'object') ?\r\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\r\n                                {\r\n                                    message.map((msg, index) => {\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <div className=\"toast-content\">{msg}</div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </CustomScrollBar> :\r\n                            <div className=\"toast-content\">\r\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CustomToastCloseButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\r\n                <i className=\"fa fa-fw fa-times-circle\" />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomToast;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        let linkToRedirect = isLoggedIn ? '/system/user-manage' : '/home';\r\n\r\n        return (\r\n            <Redirect to={linkToRedirect} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import actionTypes from './actionTypes';\r\n\r\nexport const appStartUpComplete = () => ({\r\n    type: actionTypes.APP_START_UP_COMPLETE\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n    contentOfConfirmModal: contentOfConfirmModal\r\n});\r\n\r\nexport const changeLanguageApp = (languageInput) => ({\r\n    type: actionTypes.CHANGE_LANGUAGE,\r\n    language: languageInput\r\n})","import axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    // withCredentials: true\r\n});\r\n\r\n\r\n\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return response.data\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","import axios from \"../axios\"\r\nconst handleLoginApi = (email, password) => {\r\n    return axios.post('/api/login', { email, password })\r\n}\r\n\r\nconst getAllUser = (inputId) => {\r\n    return axios.get(`/api/get-alluser?id=${inputId}`)\r\n}\r\n\r\nconst createNewUserService = (data) => {\r\n    return axios.post(`/api/create-new-user`, data)\r\n}\r\n\r\nconst deleteUserService = (userId) => {\r\n    return axios.delete(`/api/delete-user`, { data: { id: userId } })\r\n}\r\n\r\nconst editUserService = (data) => {\r\n    return axios.put(`/api/edit-user`, data)\r\n}\r\n\r\nexport { handleLoginApi, getAllUser, createNewUserService, deleteUserService, editUserService }\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { handleLoginApi } from '../../services/userService';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isShowPassword: false,\r\n            errMessage: ''\r\n        }\r\n    }\r\n\r\n    handleChangeUserName = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handleChangePassword = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleLogin = async () => {\r\n        this.setState({\r\n            errMessage: ''\r\n        })\r\n        try {\r\n            let data = await handleLoginApi(this.state.username, this.state.password)\r\n            if (data && data.errCode !== 0) {\r\n                this.setState({\r\n                    errMessage: data.message\r\n                })\r\n            }\r\n\r\n            if (data && data.errCode === 0) {\r\n                // todo\r\n                this.props.userLoginSuccess(data.user)\r\n                console.log('login succes')\r\n            }\r\n        } catch (e) {\r\n            if (e.response) {\r\n                if (e.response.data) {\r\n                    this.setState({\r\n                        errMessage: e.response.data.message\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleShowHidePassword = () => {\r\n        this.setState({\r\n            isShowPassword: !this.state.isShowPassword\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='login-background'>\r\n                <div className='login-container'>\r\n                    <div className='login-content row'>\r\n                        <h3 className='col-12 text-center login-title'><b>Login</b></h3>\r\n                        <div className='col-12 form-group row-user-name'>\r\n                            <label>Username:</label>\r\n                            <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                placeholder='Enter your username'\r\n                                value={this.state.username}\r\n                                onChange={(event) => { this.handleChangeUserName(event) }}\r\n                            />\r\n                        </div>\r\n                        <div className='col-12 form-group row-password'>\r\n                            <label>Password:</label>\r\n                            <div className='custom-input-password'>\r\n                                <input\r\n                                    type={this.state.isShowPassword ? \"text\" : \"password\"}\r\n                                    className='form-control'\r\n                                    placeholder='Enter your password'\r\n                                    value={this.state.password}\r\n                                    onChange={(event) => { this.handleChangePassword(event) }}\r\n                                />\r\n                                <span\r\n                                    onClick={() => { this.handleShowHidePassword() }}>\r\n                                    <i className={this.state.isShowPassword ? \"fas fa-eye-slash\" : \"fas fa-eye\"}></i>\r\n                                </span>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-12 ' style={{ color: 'red' }}>\r\n                            {this.state.errMessage}\r\n                        </div>\r\n                        <div className='col-12 btn-login'>\r\n                            <button\r\n                                onClick={() => { this.handleLogin() }}\r\n                            >\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                        <div className='col-12 login-forgot'>\r\n                            <span>Forgot your password?</span>\r\n                        </div>\r\n                        <div className='col-12 text-center login-more'>\r\n                            <span>Or sign in with:</span>\r\n                        </div>\r\n                        <div className='col-12 login-icon'>\r\n                            <i className=\"fab google fa-google-plus\"></i>\r\n                            <i className=\"fab twitter fa-twitter-square\"></i>\r\n                            <i className=\"fab facebook fa-facebook\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        // userLoginFail: () => dispatch(actions.userLoginFail()),\r\n        userLoginSuccess: (userInfor) => dispatch(actions.userLoginSuccess(userInfor)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import actionTypes from './actionTypes';\r\n\r\nexport const addUserSuccess = () => ({\r\n    type: actionTypes.ADD_USER_SUCCESS\r\n})\r\n\r\nexport const userLoginSuccess = (userInfo) => ({\r\n    type: actionTypes.USER_LOGIN_SUCCESS,\r\n    userInfo: userInfo\r\n})\r\n\r\nexport const userLoginFail = () => ({\r\n    type: actionTypes.USER_LOGIN_FAIL\r\n})\r\n\r\nexport const processLogout = () => ({\r\n    type: actionTypes.PROCESS_LOGOUT\r\n})\r\n\r\n","import EventEmitter from 'events'\r\n\r\nconst _emitter = new EventEmitter()\r\n_emitter.setMaxListeners(0)\r\n\r\nexport const emitter = _emitter","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, ModalHeader, ModalBody, ModalFooter, Modal } from 'reactstrap'\r\nimport { textChangeRangeIsUnchanged } from 'typescript';\r\nimport { emitter } from '../../utils/emitter'\r\nclass ModalUser extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            address: '',\r\n            phoneNumber: '',\r\n        }\r\n\r\n        this.listenToEmitter()\r\n    }\r\n\r\n    listenToEmitter() {\r\n        emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\r\n            // reset state\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                address: '',\r\n                phoneNumber: '',\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleFromParent()\r\n    }\r\n\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state }\r\n        copyState[id] = event.target.value\r\n\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true\r\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'address', 'phoneNumber']\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false\r\n                alert('Missing parameters: ' + arrInput[i])\r\n                break;\r\n            }\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n        let isValid = this.checkValidateInput()\r\n        if (isValid === true) {\r\n            this.props.createNewUser(this.state)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => { this.toggle() }}\r\n                className=\"modal-user-container\"\r\n            >\r\n                <ModalHeader\r\n                    toggle={() => { this.toggle() }}\r\n                >\r\n                    Create A New Users\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div className='modal-user-body '>\r\n                        <div className='modal-row'>\r\n                            <div className='input-container'>\r\n                                <label>Email</label>\r\n                                <input type='text' onChange={(event) => { this.handleOnchangeInput(event, \"email\") }} value={this.state.email} />\r\n                            </div>\r\n                            <div className='input-container'>\r\n                                <label>Password</label>\r\n                                <input type='password' onChange={(event) => { this.handleOnchangeInput(event, \"password\") }} value={this.state.password} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='modal-row'>\r\n                            <div className='input-container'>\r\n                                <label>FirstName</label>\r\n                                <input type='text' onChange={(event) => { this.handleOnchangeInput(event, \"firstName\") }} value={this.state.firstName} />\r\n                            </div>\r\n                            <div className='input-container'>\r\n                                <label>LastName</label>\r\n                                <input type='text' onChange={(event) => { this.handleOnchangeInput(event, \"lastName\") }} value={this.state.lastName} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='modal-row width-100'>\r\n                            <div className='input-container'>\r\n                                <label>Address</label>\r\n                                <input type='text' onChange={(event) => { this.handleOnchangeInput(event, \"address\") }} value={this.state.address} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='modal-row width-100'>\r\n                            <div className='input-container'>\r\n                                <label>Phone Number</label>\r\n                                <input type='text' onChange={(event) => { this.handleOnchangeInput(event, \"phoneNumber\") }} value={this.state.phoneNumber} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        type='submit'\r\n                        onClick={() => { this.handleAddNewUser() }}\r\n                    >\r\n                        Add New\r\n                    </Button>\r\n                    {' '}\r\n                    <Button\r\n                        onClick={() => { this.toggle() }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, ModalHeader, ModalBody, ModalFooter, Modal } from 'reactstrap'\r\nimport { textChangeRangeIsUnchanged } from 'typescript';\r\nimport { emitter } from '../../utils/emitter';\r\nclass ModalEditUser extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: '',\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            address: '',\r\n            phoneNumber: '',\r\n        }\r\n        this.listenToEmitter()\r\n    }\r\n\r\n    listenToEmitter() {\r\n        emitter.on('EVENT_SET_MODAL_EDIT_USER', (user) => {\r\n            // console.log(user) \r\n            this.setState({\r\n                id: user.id,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                address: user.address,\r\n                phoneNumber: user.phoneNumber\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleFromParent()\r\n    }\r\n\r\n    handleOnchangeInput = (event, id) => {\r\n        let copyState = { ...this.state }\r\n        copyState[id] = event.target.value\r\n\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true\r\n        let arrInput = ['firstName', 'lastName', 'address', 'phoneNumber']\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false\r\n                alert('Missing parameters: ' + arrInput[i])\r\n                break;\r\n            }\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    handleEditUser = () => {\r\n        let isValid = this.checkValidateInput()\r\n        if (isValid === true) {\r\n            this.props.editUser(this.state)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => { this.toggle() }}\r\n                className=\"modal-user-container\"\r\n            >\r\n                <ModalHeader\r\n                    toggle={() => { this.toggle() }}\r\n                >\r\n                    Edit User\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div className='modal-user-body '>\r\n                        <div className='modal-row'>\r\n                            <div className='input-container'>\r\n                                <label>FirstName</label>\r\n                                <input type='text' onChange={(event) => { this.handleOnchangeInput(event, \"firstName\") }} value={this.state.firstName} />\r\n                            </div>\r\n                            <div className='input-container'>\r\n                                <label>LastName</label>\r\n                                <input type='text' onChange={(event) => { this.handleOnchangeInput(event, \"lastName\") }} value={this.state.lastName} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='modal-row width-100'>\r\n                            <div className='input-container'>\r\n                                <label>Address</label>\r\n                                <input type='text' onChange={(event) => { this.handleOnchangeInput(event, \"address\") }} value={this.state.address} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='modal-row width-100'>\r\n                            <div className='input-container'>\r\n                                <label>Phone Number</label>\r\n                                <input type='text' onChange={(event) => { this.handleOnchangeInput(event, \"phoneNumber\") }} value={this.state.phoneNumber} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        type='submit'\r\n                        onClick={() => { this.handleEditUser() }}\r\n                    >\r\n                        Save changes\r\n                    </Button>\r\n                    {' '}\r\n                    <Button\r\n                        onClick={() => { this.toggle() }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserManage.scss'\r\nimport { getAllUser, createNewUserService, deleteUserService, editUserService } from '../../services/userService'\r\nimport ModalUser from './ModalUser'\r\nimport { emitter } from '../../utils/emitter'\r\nimport { reject } from 'lodash';\r\nimport ModalEditUser from './ModalEditUser';\r\n\r\nclass UserManage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            arrUsers: [],\r\n            isOpenModal: false,\r\n            isOpenModalEditUser: false,\r\n        }\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUserFromReact()\r\n    }\r\n\r\n    getAllUserFromReact = async () => {\r\n        let response = await getAllUser('ALL')\r\n        if (response && response.errCode === 0) {\r\n            this.setState({\r\n                arrUsers: response.users\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteUser = async (user) => {\r\n        try {\r\n            let response = await deleteUserService(user.id)\r\n            if (response.errCode !== 0) {\r\n                alert(response.message)\r\n            } else {\r\n                await this.getAllUserFromReact()\r\n            }\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Life cycle: \r\n     * Run component: \r\n     * 1. Run constructor -> init state\r\n     * 2. Did mount (set state)\r\n     * 3. Render\r\n     * \r\n     */\r\n\r\n    handleAddNewUser = () => {\r\n        this.setState({\r\n            isOpenModal: true,\r\n        })\r\n    }\r\n\r\n    handleEditUser = (user) => {\r\n        emitter.emit('EVENT_SET_MODAL_EDIT_USER', user)\r\n        this.setState({\r\n            isOpenModalEditUser: true,\r\n        })\r\n    }\r\n\r\n    toogleUserModal = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        })\r\n    }\r\n\r\n    toogleUserModalEdit = () => {\r\n        this.setState({\r\n            isOpenModalEditUser: !this.state.isOpenModalEditUser\r\n        })\r\n    }\r\n\r\n\r\n    createNewUser = async (data) => {\r\n        try {\r\n            let response = await createNewUserService(data)\r\n            console.log('response create user', response)\r\n            if (response && response.errCode !== 0) {\r\n                alert(response.message)\r\n            } else {\r\n                await this.getAllUserFromReact()\r\n                this.setState({\r\n                    isOpenModal: false\r\n                })\r\n                emitter.emit('EVENT_CLEAR_MODAL_DATA')\r\n            }\r\n        } catch (error) {\r\n            reject(error)\r\n        }\r\n    }\r\n\r\n    editUser = async (data) => {\r\n        try {\r\n            let response = await editUserService(data)\r\n            if (response && response.errCode !== 0) {\r\n                alert(response.message)\r\n            } else {\r\n                await this.getAllUserFromReact()\r\n                this.setState({\r\n                    isOpenModalEditUser: false\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let arrUsers = this.state.arrUsers\r\n        return (\r\n            <div className=\"users-container\">\r\n                <ModalUser\r\n                    isOpen={this.state.isOpenModal}\r\n                    toggleFromParent={this.toogleUserModal}\r\n                    createNewUser={this.createNewUser}\r\n                />\r\n                <ModalEditUser\r\n                    isOpen={this.state.isOpenModalEditUser}\r\n                    editUser={this.editUser}\r\n                    toggleFromParent={this.toogleUserModalEdit}\r\n                // createNewUser={this.createNewUser}\r\n                />\r\n                <div className='user-table mt-5 mx-3'>\r\n                    <h3 className='text-center'>MANAGE USER</h3>\r\n                    <div className='mx-1'>\r\n                        <button\r\n                            className='btn btn-primary px-3 mb-3'\r\n                            onClick={() => { this.handleAddNewUser() }}\r\n                        >\r\n                            <i className=\"fas fa-plus pe-2\"></i>\r\n                            Add a new user\r\n                        </button>\r\n                    </div>\r\n\r\n                    <table id=\"customers\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <th>First Name</th>\r\n                                <th>Last Name</th>\r\n                                <th>Address</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n\r\n                            {\r\n                                arrUsers && arrUsers.map((item, index) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>{item.email}</td>\r\n                                            <td>{item.firstName}</td>\r\n                                            <td>{item.lastName}</td>\r\n                                            <td>{item.address}</td>\r\n                                            <td>\r\n                                                <button onClick={() => this.handleEditUser(item)}>Edit</button>\r\n                                                <button onClick={() => this.deleteUser(item)}>Delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass UserRedux extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='user-redux-container'>\r\n                    <div className=\"title\" >UserRedux</div>\r\n                    <div className='user-redux-body'>\r\n                        <div className='user-redux-add'>Thêm mới người dùng</div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Navigator.scss';\r\n\r\nclass MenuGroup extends Component {\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        return (\r\n            <li className=\"menu-group\">\r\n                <div className=\"menu-group-name\">\r\n                    <FormattedMessage id={name} />\r\n                </div>\r\n                <ul className=\"menu-list list-unstyled\">\r\n                    {children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\r\n                {hasSubMenu ? (\r\n                    <Fragment>\r\n                        <span\r\n                            data-toggle=\"collapse\"\r\n                            className={\"menu-link collapsed\"}\r\n                            onClick={onClick}\r\n                            aria-expanded={\"false\"}\r\n                        >\r\n                            <FormattedMessage id={name} />\r\n                            <div className=\"icon-right\">\r\n                                <i className={\"far fa-angle-right\"} />\r\n                            </div>\r\n                        </span>\r\n                        <div>\r\n                            <ul className=\"sub-menu-list list-unstyled\">\r\n                                {children}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n                            <FormattedMessage id={name} />\r\n                        </Link>\r\n                    )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n\r\n    getItemClass = path => {\r\n        return this.props.location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    render() {\r\n        const { name, link, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n                    <FormattedMessage id={name} />\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n\r\n    class InnerComponentWithRef extends React.Component {\r\n        render() {\r\n            const { forwardRef, ...rest } = this.props;\r\n            return <WrappedComponent {...rest} ref={forwardRef} />;\r\n        }\r\n    }\r\n\r\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n    return React.forwardRef((props, ref) => {\r\n        return <ComponentWithRef {...props} forwardRef={ref} />;\r\n    });\r\n};\r\n\r\nclass Navigator extends Component {\r\n    state = {\r\n        expandedMenu: {}\r\n    };\r\n\r\n    toggle = (groupIndex, menuIndex) => {\r\n        const expandedMenu = {};\r\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\r\n        if (needExpand) {\r\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\r\n        }\r\n\r\n        this.setState({\r\n            expandedMenu: expandedMenu\r\n        });\r\n    };\r\n\r\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n        if (subMenus) {\r\n            if (subMenus.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            const currentPath = location.pathname;\r\n            for (let i = 0; i < subMenus.length; i++) {\r\n                const subMenu = subMenus[i];\r\n                if (subMenu.link === currentPath) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (link) {\r\n            return this.props.location.pathname === link;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    checkActiveMenu = () => {\r\n        const { menus, location } = this.props;\r\n        outerLoop:\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const group = menus[i];\r\n            if (group.menus && group.menus.length > 0) {\r\n                for (let j = 0; j < group.menus.length; j++) {\r\n                    const menu = group.menus[j];\r\n                    if (menu.subMenus && menu.subMenus.length > 0) {\r\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n                            const key = i + '_' + j;\r\n                            this.setState({\r\n                                expandedMenu: {\r\n                                    [key]: true\r\n                                }\r\n                            });\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkActiveMenu();\r\n    };\r\n\r\n    // componentWillReceiveProps(nextProps, prevState) {\r\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n    //     const { location: nextLocation } = nextProps;\r\n    //     if (location !== nextLocation) {\r\n    //         let pathname = nextLocation && nextLocation.pathname;\r\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n    //             setAccountMenuPath(pathname);\r\n    //         }\r\n    //         if (pathname.startsWith('/settings/')) {\r\n    //             setSettingMenuPath(pathname);\r\n    //         };\r\n    //     };\r\n    // };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { location } = this.props;\r\n        const { location: prevLocation } = prevProps;\r\n        if (location !== prevLocation) {\r\n            this.checkActiveMenu();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { menus, location, onLinkClick } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className=\"navigator-menu list-unstyled\">\r\n                    {\r\n                        menus.map((group, groupIndex) => {\r\n                            return (\r\n                                <Fragment key={groupIndex}>\r\n                                    <MenuGroupWithRouter name={group.name}>\r\n                                        {group.menus ? (\r\n                                            group.menus.map((menu, menuIndex) => {\r\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\r\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\r\n                                                return (\r\n                                                    <MenuWithRouter\r\n                                                        key={menuIndex}\r\n                                                        active={isMenuHasSubMenuActive}\r\n                                                        name={menu.name}\r\n                                                        link={menu.link}\r\n                                                        hasSubMenu={menu.subMenus}\r\n                                                        isOpen={isSubMenuOpen}\r\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                                                        onLinkClick={onLinkClick}\r\n                                                    >\r\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                                            <SubMenuWithRouter\r\n                                                                key={subMenuIndex}\r\n                                                                name={subMenu.name}\r\n                                                                link={subMenu.link}\r\n                                                                onClick={this.closeOtherExpand}\r\n                                                                onLinkClick={onLinkClick}\r\n                                                            />\r\n                                                        ))}\r\n                                                    </MenuWithRouter>\r\n                                                );\r\n                                            })\r\n                                        ) : null}\r\n                                    </MenuGroupWithRouter>\r\n                                </Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\r\n","export const adminMenu = [\r\n    { //hệ thống\r\n        name: 'menu.system.header', menus: [\r\n            {\r\n                name: 'menu.system.system-administrator.header',\r\n                subMenus: [\r\n                    { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                    { name: 'menu.system.system-administrator.user-redux', link: '/system/user-redux' },\r\n                ]\r\n            },\r\n            // { name: 'menu.system.system-parameter.header', link: '/system/system-parameter' },\r\n        ]\r\n    },\r\n];","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from '../../components/Navigator';\r\nimport { adminMenu } from './menuApp';\r\nimport './Header.scss';\r\nimport { LANGUAGES } from \"../../utils/constant\"\r\n\r\nclass Header extends Component {\r\n\r\n    handleChangeLanguage = (language) => {\r\n        this.props.changeLanguageAppRedux(language)\r\n    }\r\n\r\n    render() {\r\n        const { processLogout, language } = this.props;\r\n\r\n\r\n        return (\r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                <div className=\"header-tabs-container\">\r\n                    <Navigator menus={adminMenu} />\r\n                </div>\r\n\r\n                <div className='languages'>\r\n                    <span\r\n                        className={language === LANGUAGES.VI ? 'language-vi active' : 'language-vi'}\r\n                        onClick={() => this.handleChangeLanguage(LANGUAGES.VI)}\r\n                    >\r\n                        VN\r\n                    </span>\r\n                    <span\r\n                        className={language === LANGUAGES.EN ? 'language-en active' : 'language-en'}\r\n                        onClick={() => this.handleChangeLanguage(LANGUAGES.EN)}\r\n                    >\r\n                        EN\r\n                    </span>\r\n                    <div className=\"btn btn-logout\" onClick={processLogout} title=\"Log out\">\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* nút logout */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserManage from '../containers/System/UserManage';\r\nimport UserRedux from '../containers/System/UserRedux';\r\nimport Header from '../containers/Header/Header';\r\n\r\nclass System extends Component {\r\n    render() {\r\n\r\n        const { systemMenuPath, isLoggedIn } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route path=\"/system/user-manage\" component={UserManage} />\r\n                            <Route path=\"/system/user-redux\" component={UserRedux} />\r\n                            <Route component={() => { return (<Redirect to={systemMenuPath} />) }} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Modal } from 'reactstrap';\r\n\r\nimport './ConfirmModal.scss';\r\nimport * as actions from \"../store/actions\";\r\nimport { KeyCodeUtils } from \"../utils\";\r\n\r\nclass ConfirmModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.acceptBtnRef = React.createRef();\r\n    }\r\n\r\n    initialState = {\r\n    };\r\n\r\n    state = {\r\n        ...this.initialState\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            if (!this.acceptBtnRef.current || this.acceptBtnRef.current.disabled) return;\r\n            this.acceptBtnRef.current.click();\r\n        }\r\n    }\r\n\r\n    onAcceptBtnClick = () => {\r\n        const { contentOfConfirmModal } = this.props;\r\n        if (contentOfConfirmModal.handleFunc) {\r\n            contentOfConfirmModal.handleFunc(contentOfConfirmModal.dataFunc);\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.setContentOfConfirmModal({\r\n            isOpen: false,\r\n            messageId: \"\",\r\n            handleFunc: null,\r\n            dataFunc: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { contentOfConfirmModal } = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={contentOfConfirmModal.isOpen} className='confirm-modal' centered={true}>\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-title\">\r\n                        <FormattedMessage id={\"common.confirm\"} />\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button className=\"btn btn-close\" onClick={this.onClose}>\r\n                            <i className=\"fal fa-times\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <div className=\"confirm-modal-content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormattedMessage id={contentOfConfirmModal.messageId ? contentOfConfirmModal.messageId : \"common.confirm-this-task\"} />\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"btn-container text-center\">\r\n                                    <button className=\"btn btn-add\" onClick={this.onClose} >\r\n                                        <FormattedMessage id=\"common.close\" />\r\n                                    </button>\r\n                                    <button ref={this.acceptBtnRef} className=\"btn btn-add\" onClick={this.onAcceptBtnClick}>\r\n                                        <FormattedMessage id={\"common.accept\"} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        contentOfConfirmModal: state.app.contentOfConfirmModal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setContentOfConfirmModal: (contentOfConfirmModal) => dispatch(actions.setContentOfConfirmModal(contentOfConfirmModal))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomeHeader.scss'\r\nimport { FormattedMessage } from \"react-intl\"\r\nimport { LANGUAGES } from '../../utils/constant'\r\nimport { changeLanguageApp } from '../../store/actions'\r\n\r\nclass HomeHeader extends Component {\r\n\r\n    changeLanguage = (language) => {\r\n        // fire redux event(action)\r\n        // hàm mapDispatchToProps giúp chuyển các hàm bên trong nó tới props, \r\n        // nên ta sử dụng this.props ở đây\r\n        this.props.changeLanguageAppRedux(language)\r\n    }\r\n\r\n    render() {\r\n        let language = this.props.language\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className='home-header-container'>\r\n                    <div className='home-header-content'>\r\n                        <div className='left-content'>\r\n                            <i class=\"fas fa-bars\"></i>\r\n                            <div className='header-logo'></div>\r\n                        </div>\r\n                        <div className='center-content'>\r\n                            <div className='child-content'>\r\n                                <div className='child-title'><b> <FormattedMessage id=\"home-header.speciality\" /></b></div>\r\n                                <div className='child-desc'><p><FormattedMessage id=\"home-header.search-doctor\" /></p></div>\r\n                            </div>\r\n                            <div className='child-content'>\r\n                                <div className='child-title'><b><FormattedMessage id=\"home-header.health-facility\" /></b></div>\r\n                                <div className='child-desc'><p><FormattedMessage id=\"home-header.select-room\" /></p></div>\r\n                            </div>\r\n                            <div className='child-content'>\r\n                                <div className='child-title'><b><FormattedMessage id=\"home-header.doctor\" /></b></div>\r\n                                <div className='child-desc'><p><FormattedMessage id=\"home-header.select-doctor\" /></p></div>\r\n                            </div>\r\n                            <div className='child-content'>\r\n                                <div className='child-title'><b><FormattedMessage id=\"home-header.fee\" /></b></div>\r\n                                <div className='child-desc'><p><FormattedMessage id=\"home-header.check-health\" /></p></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='right-content'>\r\n                            <div className=\"support\">\r\n                                <i class=\"fas fa-question-circle\"></i>\r\n                                <p><FormattedMessage id=\"home-header.support\" /></p>\r\n                            </div>\r\n                            <div className={language === LANGUAGES.VI ? 'language-vi active-language' : 'language-vi'}><span onClick={() => this.changeLanguage(LANGUAGES.VI)}>VN</span></div>\r\n                            <div className={language === LANGUAGES.EN ? 'language-en active-language' : 'language-en'}><span onClick={() => this.changeLanguage(LANGUAGES.EN)}>EN</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-header-banner\">\r\n                    <div className=\"home-content-img\">\r\n                        <div className=\"title1\"><FormattedMessage id=\"header-banner.title1\" /></div>\r\n                        <div className=\"title2\"><FormattedMessage id=\"header-banner.title2\" /></div>\r\n                        <div className=\"search\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                            <input type=\"text\" placeholder=\"Tìm lý do khám\" />\r\n                        </div>\r\n                        <div className=\"options\">\r\n                            <div className=\"option-items\">\r\n                                <div className=\"option-img\">\r\n                                    <div className=\"option-content-img option1\"></div>\r\n                                </div>\r\n                                <h4 className=\"option-title\">\r\n                                    <FormattedMessage id=\"header-banner.options.option1\" />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"option-items\">\r\n                                <div className=\"option-img\">\r\n                                    <div className=\"option-content-img option2\"></div>\r\n                                </div>\r\n                                <h4 className=\"option-title\">\r\n                                    <FormattedMessage id=\"header-banner.options.option2\" />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"option-items\">\r\n                                <div className=\"option-img\">\r\n                                    <div className=\"option-content-img option3\"></div>\r\n                                </div>\r\n                                <h4 className=\"option-title\">\r\n                                    <FormattedMessage id=\"header-banner.options.option3\" />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"option-items\">\r\n                                <div className=\"option-img\">\r\n                                    <div className=\"option-content-img option4\"></div>\r\n                                </div>\r\n                                <h4 className=\"option-title\">\r\n                                    <FormattedMessage id=\"header-banner.options.option4\" />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"option-items\">\r\n                                <div className=\"option-img\">\r\n                                    <div className=\"option-content-img option5\"></div>\r\n                                </div>\r\n                                <h4 className=\"option-title\">\r\n                                    <FormattedMessage id=\"header-banner.options.option5\" />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"option-items\">\r\n                                <div className=\"option-img\">\r\n                                    <div className=\"option-content-img option6\"></div>\r\n                                </div>\r\n                                <h4 className=\"option-title\">\r\n                                    <FormattedMessage id=\"header-banner.options.option6\" />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"option-items\">\r\n                                <div className=\"option-img\">\r\n                                    <div className=\"option-content-img option7\"></div>\r\n                                </div>\r\n                                <h4 className=\"option-title\">\r\n                                    <FormattedMessage id=\"header-banner.options.option7\" />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"option-items\">\r\n                                <div className=\"option-img\">\r\n                                    <div className=\"option-content-img option8\"></div>\r\n                                </div>\r\n                                <h4 className=\"option-title\">\r\n                                    <FormattedMessage id=\"header-banner.options.option8\" />\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeLanguageAppRedux: (language) => dispatch(changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeHeader);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Specialty.scss'\r\nimport { FormattedMessage } from \"react-intl\"\r\nimport Slider from \"react-slick\";\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nclass Specialty extends Component {\r\n    render() {\r\n        // let settings = {\r\n        //     infinite: true,\r\n        //     slidesToShow: 4,\r\n        //     slidesToScroll: 4\r\n        // };\r\n        return (\r\n            <div className='wrapper-section wrapper-section-speciality'>\r\n                <div className=\"section section-speciality\">\r\n                    <h3 className='header-section'>Chuyên khoa phổ biến</h3>\r\n                    <Slider {...this.props.settings}>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/13/120331-co-xuong-khop.jpg' className='img-speciality' />\r\n                            <p>Cơ Xương Khớp</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/13/121042-than-kinh.jpg' className='img-speciality' />\r\n                            <p>Khoa Thần Kinh</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/13/120933-tieu-hoa.jpg' className='img-speciality' />\r\n                            <p>Tiêu Hoá</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/13/120741-tim-mach.jpg' className='img-speciality' />\r\n                            <p>Tim Mạch</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/13/121146-tai-mui-hong.jpg' className='img-speciality' />\r\n                            <p>Tai Mũi Họng</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/13/121215-cot-song.jpg' className='img-speciality' />\r\n                            <p>Cột Sống</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/13/121232-y-hoc-co-truyen.jpg' className='img-speciality' />\r\n                            <p>Y Học Cổ Truyền</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/13/121305-cham-cuu.jpg' className='img-speciality' />\r\n                            <p>Châm Cứu</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/16/181822-san-phu-khoa.jpg' className='img-speciality' />\r\n                            <p>Sản Phụ Khoa</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/16/181619-sieu-am-thai.jpg' className='img-speciality' />\r\n                            <p>Siêu Âm Thai</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w300/2019/12/16/175620-nhi-khoa.jpg' className='img-speciality' />\r\n                            <p>Nhi Khoa</p>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Specialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './MedicalFacility.scss'\r\nimport Slider from \"react-slick\";\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass MedicalFacility extends Component {\r\n\r\n    render() {\r\n        // let settings = {\r\n        //     infinite: true,\r\n        //     slidesToShow: 4,\r\n        //     slidesToScroll: 4\r\n        // };\r\n        return (\r\n            <div className='wrapper-section wrapper-section-medical-facility'>\r\n                <div className=\"section section-medical-specility\">\r\n                    <h3 className='header-section'>Cơ sở y tế nổi bật</h3>\r\n                    <Slider {...this.props.settings}>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2021/04/09/141740-mindcare.png' className='img-speciality' />\r\n                            <p>Trung tâm tham vấn, trị liệu Tâm lý MindCare Việt Nam</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2021/03/19/142809-golden-healthcare.jpg' className='img-speciality' />\r\n                            <p>Phòng khám Đa khoa Quốc tế Golden Healthcare</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2021/04/16/110944-sunnycare.png' className='img-speciality' />\r\n                            <p>Viện Tư vấn Tâm lý SunnyCare</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2018/07/04/082317benh-vien-thanh-nhan.jpg' className='img-speciality' />\r\n                            <p>Bệnh viện Thanh Nhàn</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2018/09/18/152527acc2.jpg' className='img-speciality' />\r\n                            <p>Phòng Khám ACC - Chiropractic Quận 1 TP.HCM</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2021/04/11/172740-sihg.jpg' className='img-speciality' />\r\n                            <p>Phòng khám đa khoa Singapore Indochina Healthcare Group (SIHG)</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2022/02/09/153155-anh-vinmec-hn.jpg' className='img-speciality' />\r\n                            <p>Bệnh Viện Đa Khoa Quốc Tế Vinmec Times City</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2020/06/04/095958-benh-vien-dong-do1.jpg' className='img-speciality' />\r\n                            <p>Bệnh viện Đa khoa Đông Đô</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2020/06/04/101123-bv-mat-dnd1.jpg' className='img-speciality' />\r\n                            <p>Bệnh viện Mắt quốc tế DND</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2018/06/18/163407phong-kham-meditec.jpg' className='img-speciality' />\r\n                            <p>Phòng khám Đa khoa Meditec</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2020/06/04/094107-quay-tiep-don-lao-khoa.jpg' className='img-speciality' />\r\n                            <p>Bệnh viện Lão khoa Trung ương</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2018/06/25/180121phong-kham-hoang-long1.jpg' className='img-speciality' />\r\n                            <p>Phòng Khám Đa Khoa Hoàng Long</p>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MedicalFacility);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './OutstandingDoctor.scss'\r\nimport Slider from \"react-slick\";\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass OutstandingDoctor extends Component {\r\n\r\n    render() {\r\n        // let settings = {\r\n        //     infinite: true,\r\n        //     slidesToShow: 4,\r\n        //     slidesToScroll: 4\r\n        // };\r\n        return (\r\n            <div className='wrapper-section wrapper-section-outstanding-doctor'>\r\n                <div className=\"section section-outstanding-doctor\">\r\n                    <h3 className='header-section'>Bác sĩ nổi bật tuần qua</h3>\r\n                    <Slider {...this.props.settings}>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2020/03/17/114430-bshung.jpg' className='img-speciality' />\r\n                            <p>Trung tâm tham vấn, trị liệu Tâm lý MindCare Việt Nam</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Phòng khám Đa khoa Quốc tế Golden Healthcare</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Viện Tư vấn Tâm lý SunnyCare</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Bệnh viện Thanh Nhàn</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Phòng Khám ACC - Chiropractic Quận 1 TP.HCM</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Bác sĩ: ...</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Bác sĩ: ...</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Bác sĩ: ...</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Bác sĩ: ...</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Bác sĩ: ...</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Bác sĩ: ...</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w200/2021/01/18/105401-bsckii-tran-minh-khuyen.jpg' className='img-speciality' />\r\n                            <p>Bác sĩ: ...</p>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OutstandingDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from \"react-slick\";\r\nimport './HandBook.scss'\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass HandBook extends Component {\r\n\r\n    render() {\r\n        let settings = {\r\n            infinite: true,\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2\r\n        };\r\n        return (\r\n            <div className='wrapper-section wrapper-section-handbook'>\r\n                <div className=\"section section-handbook\">\r\n                    <h3 className='header-section'>Cẩm Nang</h3>\r\n                    <Slider {...settings}>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2021/04/09/141740-mindcare.png' className='img-speciality' />\r\n                            <p>Trung tâm tham vấn, trị liệu Tâm lý MindCare Việt Nam</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2021/03/19/142809-golden-healthcare.jpg' className='img-speciality' />\r\n                            <p>Phòng khám Đa khoa Quốc tế Golden Healthcare</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2021/04/16/110944-sunnycare.png' className='img-speciality' />\r\n                            <p>Viện Tư vấn Tâm lý SunnyCare</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2018/07/04/082317benh-vien-thanh-nhan.jpg' className='img-speciality' />\r\n                            <p>Bệnh viện Thanh Nhàn</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2018/09/18/152527acc2.jpg' className='img-speciality' />\r\n                            <p>Phòng Khám ACC - Chiropractic Quận 1 TP.HCM</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2021/04/11/172740-sihg.jpg' className='img-speciality' />\r\n                            <p>Phòng khám đa khoa Singapore Indochina Healthcare Group (SIHG)</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2022/02/09/153155-anh-vinmec-hn.jpg' className='img-speciality' />\r\n                            <p>Bệnh Viện Đa Khoa Quốc Tế Vinmec Times City</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2020/06/04/095958-benh-vien-dong-do1.jpg' className='img-speciality' />\r\n                            <p>Bệnh viện Đa khoa Đông Đô</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2020/06/04/101123-bv-mat-dnd1.jpg' className='img-speciality' />\r\n                            <p>Bệnh viện Mắt quốc tế DND</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2018/06/18/163407phong-kham-meditec.jpg' className='img-speciality' />\r\n                            <p>Phòng khám Đa khoa Meditec</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2020/06/04/094107-quay-tiep-don-lao-khoa.jpg' className='img-speciality' />\r\n                            <p>Bệnh viện Lão khoa Trung ương</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src='https://cdn.bookingcare.vn/fr/w500/2018/06/25/180121phong-kham-hoang-long1.jpg' className='img-speciality' />\r\n                            <p>Phòng Khám Đa Khoa Hoàng Long</p>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HandBook);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from \"react-slick\";\r\nimport './About.scss'\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass About extends Component {\r\n\r\n    render() {\r\n        let settings = {\r\n            infinite: true,\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2\r\n        };\r\n        return (\r\n            <div className='wrapper-section wrapper-section-about'>\r\n                <div className=\"section section-about\">\r\n                    <h3 className='header-section'>Truyền thông nói gì về website đặt lịch khám bệnh</h3>\r\n                    <div className='section-about-content'>\r\n                        <div className='about-content-left'>\r\n                            <iframe width=\"570\" height=\"322\" src=\"https://www.youtube.com/embed/FyDQljKtWnI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                        </div>\r\n                        <div className='about-content-right'>\r\n                            <p>Content bên này để viết nội dung...</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from \"react-slick\";\r\nimport './HomeFooter.scss'\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass HomeFooter extends Component {\r\n\r\n    render() {\r\n        let settings = {\r\n            infinite: true,\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2\r\n        };\r\n        return (\r\n            <div className='home-footer'>\r\n                <div className=\"home-footer-content\">\r\n                    <p>&copy; 2022 Chuyên Đề Cơ Sở, <a href=''>More Information please contact with group ...</a></p>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeHeader from './HomeHeader'\r\nimport Specialty from './Section/Specialty'\r\nimport MedicalFacility from './Section/MedicalFacility';\r\nimport OutstandingDoctor from './Section/OutstandingDoctor';\r\nimport HandBook from './Section/HandBook';\r\nimport About from './Section/About';\r\nimport HomeFooter from './HomeFooter'\r\nimport './HomePage.scss'\r\n\r\nclass HomePage extends Component {\r\n\r\n    render() {\r\n\r\n        const settings = {\r\n            infinite: true,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 4\r\n        };\r\n\r\n\r\n        return (\r\n            <div>\r\n                <HomeHeader settings={settings} />\r\n                <Specialty settings={settings} />\r\n                <MedicalFacility settings={settings} />\r\n                <OutstandingDoctor settings={settings} />\r\n                <HandBook />\r\n                <About />\r\n                <HomeFooter />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\n\r\nimport { path } from '../utils'\r\n\r\nimport Home from '../routes/Home';\r\n// import Login from '../routes/Login';\r\nimport Login from './Auth/Login'\r\nimport System from '../routes/System';\r\n\r\nimport { CustomToastCloseButton } from '../components/CustomToast';\r\nimport ConfirmModal from '../components/ConfirmModal';\r\nimport HomePage from './HomePage/HomePage.js'\r\n\r\nimport CustomScrollbars from '../components/CustomScrollbars';\r\n\r\nclass App extends Component {\r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n\r\n                        <div className=\"content-container\">\r\n                            <CustomScrollbars style={{ height: '100vh', width: '100%' }}>\r\n                                <Switch>\r\n                                    <Route path={path.HOME} exact component={(Home)} />\r\n                                    <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\r\n                                    <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\r\n                                    <Route path={path.HOMEPAGE} component={HomePage} />\r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </div>\r\n\r\n                        <ToastContainer\r\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\r\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\r\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport '@formatjs/intl-pluralrules/polyfill';\r\nimport '@formatjs/intl-pluralrules/locale-data/en';\r\nimport '@formatjs/intl-pluralrules/locale-data/vi';\r\n\r\nimport '@formatjs/intl-relativetimeformat/polyfill';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\r\n\r\nimport { LanguageUtils } from '../utils'\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n\r\n    render() {\r\n        const { children, language } = this.props;\r\n        return (\r\n            <IntlProvider\r\n                locale={language}\r\n                messages={messages[language]}\r\n                defaultLocale=\"vi\">\r\n                {children}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles/styles.scss';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport reduxStore, { persistor } from './redux';\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={reduxStore}>\r\n            <IntlProviderWrapper>\r\n                <App persistor={persistor}/>\r\n            </IntlProviderWrapper>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrenderApp();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 85;"],"sourceRoot":""}